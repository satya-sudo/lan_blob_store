name: Pylint

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies and pylint
      run: |
        python -m pip install --upgrade pip
        python -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt
        pip install pylint pylint-json2html
        # Check if pylint is installed correctly
        pylint --version

    - name: Run Pylint and check score
      run: |
        # Ensure the virtual environment is activated
        source venv/bin/activate
        
        # Run pylint and capture output in JSON format
        pylint --output-format=json $(git ls-files '*.py') > pylint_output.json || true
        
        # Check if pylint_output.json is empty or invalid
        if [ ! -s pylint_output.json ]; then
          echo "No pylint output found, skipping score check."
          exit 0
        fi
        
        # Extract the average score from the pylint output
        pylint_score=$(jq '[.[] | select(.score != null) | .score] | add / length' pylint_output.json)
        
        # Check if the jq command returned a valid score
        if [ "$pylint_score" == "null" ]; then
          echo "Error extracting pylint score from output."
          exit 1
        fi

        echo "Pylint score: $pylint_score"

        # If the score is greater than or equal to 8, exit with code 0, otherwise exit with 1
        if (( $(echo "$pylint_score >= 8" | bc -l) )); then
          echo "Pylint score is above 8, passing the build."
          exit 0
        else
          echo "Pylint score is below 8, failing the build."
          exit 1
        fi
